//time complexity of O(log n), divides the search space by half in each step, leading to a logarithmic time complexity.
class Solution {
    public int searchInsert(int[] nums, int target) {
        int left = 0;
        int right = nums.length - 1;

        while(left <= right){
            int mid = left + (right - left) / 2;

            if(nums[mid]==target){
                return mid;
            }
            if(nums[mid]>target){
                right = mid -1;
            }else{
                left = mid + 1;
            }
        }
        return left;
    }
}
